@model OrderSystem.Domain.Models.Product

@{
    ViewData["Title"] = "Create Product";
}

<div class="container mt-4">
    <h2 class="mb-4">Create Product</h2>

    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        <div class="mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" required minlength="3" />
            <span asp-validation-for="Name" class="text-danger"></span>
            <div class="invalid-feedback">Name is required and must be at least 3 characters.</div>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Price" class="form-label"></label>
            <input asp-for="Price" class="form-control" type="number" step="0.01" required min="0.01" />
            <span asp-validation-for="Price" class="text-danger"></span>
            <div class="invalid-feedback">Price must be greater than 0.</div>
        </div>

        <div class="mb-3">
            <label asp-for="StockQuantity" class="form-label"></label>
            <input asp-for="StockQuantity" class="form-control" type="number" required min="0" />
            <span asp-validation-for="StockQuantity" class="text-danger"></span>
            <div class="invalid-feedback">Stock quantity is required and cannot be negative.</div>
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}
